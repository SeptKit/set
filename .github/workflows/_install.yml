name: _install
on:
  workflow_call:
    inputs:
      package-name: # the scripts appends the `packages/` part. eg.: shell is enough
        required: true
        type: string
    outputs:
      cache-key:
        description: 'Cache key for node_modules'
        value: ${{ jobs.cache-and-install.outputs.cache-key }}

jobs:
  cache-and-install:
    runs-on: ubuntu-latest

    outputs:
      cache-key: ${{ steps.cache-node-modules.outputs.cache-hit }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.10.0
          run_install: false

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: packages/${{inputs.package-name}}/node_modules
          key: ${{ runner.os }}-node-modules-${{inputs.package-name}}-${{ hashFiles( format('**/packages/{0}/pnpm-lock.yaml',inputs.package-name) ) }}

      - name: Install dependencies
        working-directory: packages/${{ inputs.package-name }}
        run: pnpm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Restore node_modules cache
        if: steps.cache-node-modules.outputs.cache-hit == 'true'
        uses: actions/cache@v3
        with:
          path: packages/${{inputs.package-name}}/node_modules
          key: ${{ runner.os }}-node-modules-${{inputs.package-name}}-${{ hashFiles( format('**/packages/{0}/pnpm-lock.yaml',inputs.package-name) ) }}

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "playwright_version=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >>  $GITHUB_OUTPUT

      - name: Cache Playwright
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version }}

      - name: Install Playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      - name: Restore Playwright Cache
        if: steps.cache-playwright.outputs.cache-hit == 'true'
        uses: actions/cache@v3
        with:
          path: packages/${{inputs.package-name}}/node_modules
          key: ${{ runner.os }}-node-modules-${{inputs.package-name}}-${{ hashFiles( format('**/packages/{0}/pnpm-lock.yaml',inputs.package-name) ) }}
